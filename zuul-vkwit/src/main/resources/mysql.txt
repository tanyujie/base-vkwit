#Zuul+Mysql实现动态路由
首先sql:

CREATE TABLE `gateway_api_define` (
  `id` VARCHAR(50) NOT NULL,
  `path` VARCHAR(255) NOT NULL,
  `service_id` VARCHAR(50) DEFAULT NULL,
  `url` VARCHAR(255) DEFAULT NULL,
  `retryable` TINYINT(1) DEFAULT NULL,
  `enabled` TINYINT(1) NOT NULL,
  `strip_prefix` INT(11) DEFAULT NULL,
  `api_name` VARCHAR(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8
配置文件;

server.port=7084
spring.application.name=zuul-server
eureka.instance.hostname=peer1
#注册服务地址
eureka.client.service-url.defaultZone=http://peer1:7082/eureka/,http://peer2:7082/eureka/
#启用shutdown
endpoints.shutdown.enabled=true
#禁用/开启密码验证
endpoints.shutdown.sensitive=false
#使用OkHttpClient的API来调用集群服务
#ribbon.okhttp.enabled=true
#这里的配置表示，访问/it/**
#zuul.routes.service-hi.path=/test/**
#直接重定向到
#zuul.routes.service-hi.serviceId=SERVICE-HI

# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds=5
# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds=15


# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://172.16.1.28:3306/springcloud
spring.datasource.username=cweserver
spring.datasource.password=cweserveryzhh

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
